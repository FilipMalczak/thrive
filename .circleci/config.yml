version: 2.1

commands:
  install-test-dependencies:
    steps:
      - run: python -m pip install -r ./testing/requirements.txt

  start-compose-project:
      parameters:
        project-name:
          type: string
        items:
          type: boolean
          default: false
        stats:
          type: boolean
          default: false
      steps:
        - run: docker-compose -f ./testing/docker-compose-thrive.yml -f ./testing/docker-compose-thrive-local.yml -n << parameters.project-name >> up thrive-dependencies
        - when:
            condition: << parameters.items >>
            steps:
              - run: docker-compose -f ./testing/docker-compose-items.yml-n << parameters.project-name >> up items-dependencies
        - when:
            condition: << parameters.stats >>
            steps:
              - run: docker-compose -f ./testing/docker-compose-stats.yml-n << parameters.project-name >> up stats-dependencies

  stop-compose-project:
      parameters:
        project-name:
          type: string
      steps:
        - run:
            command: docker-compose -n << parameters.project-name >> rm -sf
            when: always

  with-compose-project:
      parameters:
        project-name:
          type: string
        items:
          type: boolean
          default: false
        stats:
          type: boolean
          default: false
        body:
          type: steps
      steps:
        - start-compose-project:
            project-name: << parameters.project-name >>
            items: << parameters.items >>
            stats: << parameters.stats >>
        - steps: << parameters.body >>
        - stop-compose-project:
            project-name: << parameters.project-name >>

  with-boot:
      parameters:
        project-name:
          type: string
        body:
          type: steps
        port:
          type: integer
          default: 8085
      steps:
        - run:
            command: |
              wget https://raw.githubusercontent.com/dadarek/docker-wait-for-dependencies/master/entrypoint.sh -O ./wait-for-dep.sh
              chmod +x ./wait-for-dep.sh
        - run:
            command: |
              SERVER_PORT=<< parameters.port >> ./gradlew :<< parameters.project-name >>:bootRun &
              echo "$!" > ./<< parameters.project-name >>.pid
              ./wait-for-dep.sh localhost:<< parameters.port >>
        - steps: << parameters.body >>
        - run:
            command: |
              kill $(cat ./<< parameters.project-name >>.pid)
              rm ./<< parameters.project-name >>.pid
            when: always

jobs:
  build:
    docker:
      - image: circleci/openjdk:8u181
      - image: circleci/python:3.7.4
    steps:
      # restore cached dependencies? or at least gradle wrapper?
      - checkout
      - run: ./gradlew clean build
      - setup_remote_docker
#          docker_layer_caching: true
      - run: ./.circleci/prepare_docker_build.sh
      - run: ./.circleci/docker_build.sh
      - with-compose-project:
          project-name: items-internal
          stats: true
          body:
            - install-test-dependencies
            - with-boot:
                project-name: test-items
                body:
                  - run: python ./testing/items_suite.py